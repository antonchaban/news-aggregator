Resources:
  antonvpccdk3D35FF91:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: EKSStack/antonvpc-cdk
    Metadata:
      aws:cdk:path: EKSStack/antonvpc-cdk/Resource
  antonvpccdkantonpublicsubnetSubnet1SubnetD0D1B122:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-west-2a
      CidrBlock: 10.0.0.0/20
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: anton-public-subnet
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: EKSStack/antonvpc-cdk/anton-public-subnetSubnet1
      VpcId:
        Ref: antonvpccdk3D35FF91
    Metadata:
      aws:cdk:path: EKSStack/antonvpc-cdk/anton-public-subnetSubnet1/Subnet
  antonvpccdkantonpublicsubnetSubnet1RouteTable38A7ABCF:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: EKSStack/antonvpc-cdk/anton-public-subnetSubnet1
      VpcId:
        Ref: antonvpccdk3D35FF91
    Metadata:
      aws:cdk:path: EKSStack/antonvpc-cdk/anton-public-subnetSubnet1/RouteTable
  antonvpccdkantonpublicsubnetSubnet1RouteTableAssociation2DF0498F:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: antonvpccdkantonpublicsubnetSubnet1RouteTable38A7ABCF
      SubnetId:
        Ref: antonvpccdkantonpublicsubnetSubnet1SubnetD0D1B122
    Metadata:
      aws:cdk:path: EKSStack/antonvpc-cdk/anton-public-subnetSubnet1/RouteTableAssociation
  antonvpccdkantonpublicsubnetSubnet1DefaultRoute401103C6:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: antonvpccdkIGWC4EBB54B
      RouteTableId:
        Ref: antonvpccdkantonpublicsubnetSubnet1RouteTable38A7ABCF
    DependsOn:
      - antonvpccdkVPCGWAE1420F0
    Metadata:
      aws:cdk:path: EKSStack/antonvpc-cdk/anton-public-subnetSubnet1/DefaultRoute
  antonvpccdkantonpublicsubnetSubnet1EIP4DF58982:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: EKSStack/antonvpc-cdk/anton-public-subnetSubnet1
    Metadata:
      aws:cdk:path: EKSStack/antonvpc-cdk/anton-public-subnetSubnet1/EIP
  antonvpccdkantonpublicsubnetSubnet1NATGatewayB5EF6795:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - antonvpccdkantonpublicsubnetSubnet1EIP4DF58982
          - AllocationId
      SubnetId:
        Ref: antonvpccdkantonpublicsubnetSubnet1SubnetD0D1B122
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: EKSStack/antonvpc-cdk/anton-public-subnetSubnet1
    DependsOn:
      - antonvpccdkantonpublicsubnetSubnet1DefaultRoute401103C6
      - antonvpccdkantonpublicsubnetSubnet1RouteTableAssociation2DF0498F
    Metadata:
      aws:cdk:path: EKSStack/antonvpc-cdk/anton-public-subnetSubnet1/NATGateway
  antonvpccdkantonpublicsubnetSubnet2SubnetEFDC3334:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-west-2b
      CidrBlock: 10.0.16.0/20
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: anton-public-subnet
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: EKSStack/antonvpc-cdk/anton-public-subnetSubnet2
      VpcId:
        Ref: antonvpccdk3D35FF91
    Metadata:
      aws:cdk:path: EKSStack/antonvpc-cdk/anton-public-subnetSubnet2/Subnet
  antonvpccdkantonpublicsubnetSubnet2RouteTable0905E0B9:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: EKSStack/antonvpc-cdk/anton-public-subnetSubnet2
      VpcId:
        Ref: antonvpccdk3D35FF91
    Metadata:
      aws:cdk:path: EKSStack/antonvpc-cdk/anton-public-subnetSubnet2/RouteTable
  antonvpccdkantonpublicsubnetSubnet2RouteTableAssociation694613B7:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: antonvpccdkantonpublicsubnetSubnet2RouteTable0905E0B9
      SubnetId:
        Ref: antonvpccdkantonpublicsubnetSubnet2SubnetEFDC3334
    Metadata:
      aws:cdk:path: EKSStack/antonvpc-cdk/anton-public-subnetSubnet2/RouteTableAssociation
  antonvpccdkantonpublicsubnetSubnet2DefaultRouteCD18C82E:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: antonvpccdkIGWC4EBB54B
      RouteTableId:
        Ref: antonvpccdkantonpublicsubnetSubnet2RouteTable0905E0B9
    DependsOn:
      - antonvpccdkVPCGWAE1420F0
    Metadata:
      aws:cdk:path: EKSStack/antonvpc-cdk/anton-public-subnetSubnet2/DefaultRoute
  antonvpccdkantonpublicsubnetSubnet2EIP9085C611:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: EKSStack/antonvpc-cdk/anton-public-subnetSubnet2
    Metadata:
      aws:cdk:path: EKSStack/antonvpc-cdk/anton-public-subnetSubnet2/EIP
  antonvpccdkantonpublicsubnetSubnet2NATGatewayC1A242E4:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - antonvpccdkantonpublicsubnetSubnet2EIP9085C611
          - AllocationId
      SubnetId:
        Ref: antonvpccdkantonpublicsubnetSubnet2SubnetEFDC3334
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: EKSStack/antonvpc-cdk/anton-public-subnetSubnet2
    DependsOn:
      - antonvpccdkantonpublicsubnetSubnet2DefaultRouteCD18C82E
      - antonvpccdkantonpublicsubnetSubnet2RouteTableAssociation694613B7
    Metadata:
      aws:cdk:path: EKSStack/antonvpc-cdk/anton-public-subnetSubnet2/NATGateway
  antonvpccdkantonpublicsubnetSubnet3SubnetD08C7E9B:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-west-2c
      CidrBlock: 10.0.32.0/20
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: anton-public-subnet
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: EKSStack/antonvpc-cdk/anton-public-subnetSubnet3
      VpcId:
        Ref: antonvpccdk3D35FF91
    Metadata:
      aws:cdk:path: EKSStack/antonvpc-cdk/anton-public-subnetSubnet3/Subnet
  antonvpccdkantonpublicsubnetSubnet3RouteTableEC4474BE:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: EKSStack/antonvpc-cdk/anton-public-subnetSubnet3
      VpcId:
        Ref: antonvpccdk3D35FF91
    Metadata:
      aws:cdk:path: EKSStack/antonvpc-cdk/anton-public-subnetSubnet3/RouteTable
  antonvpccdkantonpublicsubnetSubnet3RouteTableAssociationA091BC4A:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: antonvpccdkantonpublicsubnetSubnet3RouteTableEC4474BE
      SubnetId:
        Ref: antonvpccdkantonpublicsubnetSubnet3SubnetD08C7E9B
    Metadata:
      aws:cdk:path: EKSStack/antonvpc-cdk/anton-public-subnetSubnet3/RouteTableAssociation
  antonvpccdkantonpublicsubnetSubnet3DefaultRoute73CAE73F:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: antonvpccdkIGWC4EBB54B
      RouteTableId:
        Ref: antonvpccdkantonpublicsubnetSubnet3RouteTableEC4474BE
    DependsOn:
      - antonvpccdkVPCGWAE1420F0
    Metadata:
      aws:cdk:path: EKSStack/antonvpc-cdk/anton-public-subnetSubnet3/DefaultRoute
  antonvpccdkantonpublicsubnetSubnet3EIP86C7FE58:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: EKSStack/antonvpc-cdk/anton-public-subnetSubnet3
    Metadata:
      aws:cdk:path: EKSStack/antonvpc-cdk/anton-public-subnetSubnet3/EIP
  antonvpccdkantonpublicsubnetSubnet3NATGatewayAEB68587:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - antonvpccdkantonpublicsubnetSubnet3EIP86C7FE58
          - AllocationId
      SubnetId:
        Ref: antonvpccdkantonpublicsubnetSubnet3SubnetD08C7E9B
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: Name
          Value: EKSStack/antonvpc-cdk/anton-public-subnetSubnet3
    DependsOn:
      - antonvpccdkantonpublicsubnetSubnet3DefaultRoute73CAE73F
      - antonvpccdkantonpublicsubnetSubnet3RouteTableAssociationA091BC4A
    Metadata:
      aws:cdk:path: EKSStack/antonvpc-cdk/anton-public-subnetSubnet3/NATGateway
  antonvpccdkantonprivatesubnetSubnet1Subnet392C70FA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-west-2a
      CidrBlock: 10.0.48.0/20
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: anton-private-subnet
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: EKSStack/antonvpc-cdk/anton-private-subnetSubnet1
      VpcId:
        Ref: antonvpccdk3D35FF91
    Metadata:
      aws:cdk:path: EKSStack/antonvpc-cdk/anton-private-subnetSubnet1/Subnet
  antonvpccdkantonprivatesubnetSubnet1RouteTableCD9A5716:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: EKSStack/antonvpc-cdk/anton-private-subnetSubnet1
      VpcId:
        Ref: antonvpccdk3D35FF91
    Metadata:
      aws:cdk:path: EKSStack/antonvpc-cdk/anton-private-subnetSubnet1/RouteTable
  antonvpccdkantonprivatesubnetSubnet1RouteTableAssociationE5BE738A:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: antonvpccdkantonprivatesubnetSubnet1RouteTableCD9A5716
      SubnetId:
        Ref: antonvpccdkantonprivatesubnetSubnet1Subnet392C70FA
    Metadata:
      aws:cdk:path: EKSStack/antonvpc-cdk/anton-private-subnetSubnet1/RouteTableAssociation
  antonvpccdkantonprivatesubnetSubnet1DefaultRoute8B6A80CB:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: antonvpccdkantonpublicsubnetSubnet1NATGatewayB5EF6795
      RouteTableId:
        Ref: antonvpccdkantonprivatesubnetSubnet1RouteTableCD9A5716
    Metadata:
      aws:cdk:path: EKSStack/antonvpc-cdk/anton-private-subnetSubnet1/DefaultRoute
  antonvpccdkantonprivatesubnetSubnet2Subnet760BD6B5:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-west-2b
      CidrBlock: 10.0.64.0/20
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: anton-private-subnet
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: EKSStack/antonvpc-cdk/anton-private-subnetSubnet2
      VpcId:
        Ref: antonvpccdk3D35FF91
    Metadata:
      aws:cdk:path: EKSStack/antonvpc-cdk/anton-private-subnetSubnet2/Subnet
  antonvpccdkantonprivatesubnetSubnet2RouteTable928474E4:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: EKSStack/antonvpc-cdk/anton-private-subnetSubnet2
      VpcId:
        Ref: antonvpccdk3D35FF91
    Metadata:
      aws:cdk:path: EKSStack/antonvpc-cdk/anton-private-subnetSubnet2/RouteTable
  antonvpccdkantonprivatesubnetSubnet2RouteTableAssociation22D5EE8F:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: antonvpccdkantonprivatesubnetSubnet2RouteTable928474E4
      SubnetId:
        Ref: antonvpccdkantonprivatesubnetSubnet2Subnet760BD6B5
    Metadata:
      aws:cdk:path: EKSStack/antonvpc-cdk/anton-private-subnetSubnet2/RouteTableAssociation
  antonvpccdkantonprivatesubnetSubnet2DefaultRoute49F4F92C:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: antonvpccdkantonpublicsubnetSubnet2NATGatewayC1A242E4
      RouteTableId:
        Ref: antonvpccdkantonprivatesubnetSubnet2RouteTable928474E4
    Metadata:
      aws:cdk:path: EKSStack/antonvpc-cdk/anton-private-subnetSubnet2/DefaultRoute
  antonvpccdkantonprivatesubnetSubnet3Subnet274C6A2D:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-west-2c
      CidrBlock: 10.0.80.0/20
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: anton-private-subnet
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: EKSStack/antonvpc-cdk/anton-private-subnetSubnet3
      VpcId:
        Ref: antonvpccdk3D35FF91
    Metadata:
      aws:cdk:path: EKSStack/antonvpc-cdk/anton-private-subnetSubnet3/Subnet
  antonvpccdkantonprivatesubnetSubnet3RouteTableA813D985:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: kubernetes.io/role/internal-elb
          Value: "1"
        - Key: Name
          Value: EKSStack/antonvpc-cdk/anton-private-subnetSubnet3
      VpcId:
        Ref: antonvpccdk3D35FF91
    Metadata:
      aws:cdk:path: EKSStack/antonvpc-cdk/anton-private-subnetSubnet3/RouteTable
  antonvpccdkantonprivatesubnetSubnet3RouteTableAssociationF0511171:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: antonvpccdkantonprivatesubnetSubnet3RouteTableA813D985
      SubnetId:
        Ref: antonvpccdkantonprivatesubnetSubnet3Subnet274C6A2D
    Metadata:
      aws:cdk:path: EKSStack/antonvpc-cdk/anton-private-subnetSubnet3/RouteTableAssociation
  antonvpccdkantonprivatesubnetSubnet3DefaultRoute93043F18:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: antonvpccdkantonpublicsubnetSubnet3NATGatewayAEB68587
      RouteTableId:
        Ref: antonvpccdkantonprivatesubnetSubnet3RouteTableA813D985
    Metadata:
      aws:cdk:path: EKSStack/antonvpc-cdk/anton-private-subnetSubnet3/DefaultRoute
  antonvpccdkIGWC4EBB54B:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: EKSStack/antonvpc-cdk
    Metadata:
      aws:cdk:path: EKSStack/antonvpc-cdk/IGW
  antonvpccdkVPCGWAE1420F0:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId:
        Ref: antonvpccdkIGWC4EBB54B
      VpcId:
        Ref: antonvpccdk3D35FF91
    Metadata:
      aws:cdk:path: EKSStack/antonvpc-cdk/VPCGW
  antonvpccdkRestrictDefaultSecurityGroupCustomResourceB3942FA5:
    Type: Custom::VpcRestrictDefaultSG
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E
          - Arn
      DefaultSecurityGroupId:
        Fn::GetAtt:
          - antonvpccdk3D35FF91
          - DefaultSecurityGroup
      Account: "406477933661"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: EKSStack/antonvpc-cdk/RestrictDefaultSecurityGroupCustomResource/Default
  CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: Inline
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ec2:AuthorizeSecurityGroupIngress
                  - ec2:AuthorizeSecurityGroupEgress
                  - ec2:RevokeSecurityGroupIngress
                  - ec2:RevokeSecurityGroupEgress
                Resource:
                  - Fn::Join:
                      - ""
                      - - arn:aws:ec2:us-west-2:406477933661:security-group/
                        - Fn::GetAtt:
                            - antonvpccdk3D35FF91
                            - DefaultSecurityGroup
    Metadata:
      aws:cdk:path: EKSStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role
  CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-406477933661-us-west-2
        S3Key: ee7de53d64cc9d6248fa6aa550f92358f6c907b5efd6f3298aeab1b5e7ea358a.zip
      Timeout: 900
      MemorySize: 128
      Handler: __entrypoint__.handler
      Role:
        Fn::GetAtt:
          - CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0
          - Arn
      Runtime: nodejs20.x
      Description: Lambda function for removing all inbound/outbound rules from the VPC default security group
    DependsOn:
      - CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0
    Metadata:
      aws:cdk:path: EKSStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler
      aws:asset:path: asset.ee7de53d64cc9d6248fa6aa550f92358f6c907b5efd6f3298aeab1b5e7ea358a
      aws:asset:property: Code
  antonroutetablecdk:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: antonvpccdk3D35FF91
    Metadata:
      aws:cdk:path: EKSStack/antonroutetable-cdk
  antonroutecdk:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: antonvpccdkIGWC4EBB54B
      RouteTableId:
        Ref: antonroutetablecdk
    Metadata:
      aws:cdk:path: EKSStack/antonroute-cdk
  SubnetAssociation0:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: antonroutetablecdk
      SubnetId:
        Ref: antonvpccdkantonpublicsubnetSubnet1SubnetD0D1B122
    Metadata:
      aws:cdk:path: EKSStack/SubnetAssociation0
  SubnetAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: antonroutetablecdk
      SubnetId:
        Ref: antonvpccdkantonpublicsubnetSubnet2SubnetEFDC3334
    Metadata:
      aws:cdk:path: EKSStack/SubnetAssociation1
  SubnetAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: antonroutetablecdk
      SubnetId:
        Ref: antonvpccdkantonpublicsubnetSubnet3SubnetD08C7E9B
    Metadata:
      aws:cdk:path: EKSStack/SubnetAssociation2
  antonclusterrolecdkF4B68E20:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: eks.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonEKSClusterPolicy
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonEKSServicePolicy
    Metadata:
      aws:cdk:path: EKSStack/antonclusterrole-cdk/Resource
  antonclusterSGcdk51242161:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow traffic to EKS
      GroupName: EKSClusterSG-cdk
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow HTTPS
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443
        - CidrIp: 0.0.0.0/0
          Description: Allow HTTP
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
        - CidrIp: 0.0.0.0/0
          Description: Allow SSH
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
      VpcId:
        Ref: antonvpccdk3D35FF91
    Metadata:
      aws:cdk:path: EKSStack/antonclusterSG-cdk/Resource
  antoneksclustercdkKubectlHandlerRoleEC0D22C5:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
        - Fn::If:
            - antoneksclustercdkHasEcrPublic6D167177
            - Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - :iam::aws:policy/AmazonElasticContainerRegistryPublicReadOnly
            - Ref: AWS::NoValue
    Metadata:
      aws:cdk:path: EKSStack/antonekscluster-cdk/KubectlHandlerRole/Resource
  antoneksclustercdkKubectlHandlerRoleDefaultPolicy066BFB72:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: eks:DescribeCluster
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - antoneksclustercdk10D2EC7F
                - Arn
          - Action: sts:AssumeRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - antoneksclustercdkCreationRole46566DFE
                - Arn
        Version: "2012-10-17"
      PolicyName: antoneksclustercdkKubectlHandlerRoleDefaultPolicy066BFB72
      Roles:
        - Ref: antoneksclustercdkKubectlHandlerRoleEC0D22C5
    Metadata:
      aws:cdk:path: EKSStack/antonekscluster-cdk/KubectlHandlerRole/DefaultPolicy/Resource
  antoneksclustercdkCreationRole46566DFE:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                - Fn::GetAtt:
                    - antoneksclustercdkKubectlHandlerRoleEC0D22C5
                    - Arn
                - Fn::GetAtt:
                    - awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454
                    - Outputs.EKSStackawscdkawseksClusterResourceProviderIsCompleteHandlerServiceRole8F2065AEArn
                - Fn::GetAtt:
                    - awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454
                    - Outputs.EKSStackawscdkawseksClusterResourceProviderOnEventHandlerServiceRole39EA9DF6Arn
        Version: "2012-10-17"
    DependsOn:
      - antonvpccdkantonprivatesubnetSubnet1DefaultRoute8B6A80CB
      - antonvpccdkantonprivatesubnetSubnet1RouteTableCD9A5716
      - antonvpccdkantonprivatesubnetSubnet1RouteTableAssociationE5BE738A
      - antonvpccdkantonprivatesubnetSubnet1Subnet392C70FA
      - antonvpccdkantonprivatesubnetSubnet2DefaultRoute49F4F92C
      - antonvpccdkantonprivatesubnetSubnet2RouteTable928474E4
      - antonvpccdkantonprivatesubnetSubnet2RouteTableAssociation22D5EE8F
      - antonvpccdkantonprivatesubnetSubnet2Subnet760BD6B5
      - antonvpccdkantonprivatesubnetSubnet3DefaultRoute93043F18
      - antonvpccdkantonprivatesubnetSubnet3RouteTableA813D985
      - antonvpccdkantonprivatesubnetSubnet3RouteTableAssociationF0511171
      - antonvpccdkantonprivatesubnetSubnet3Subnet274C6A2D
      - antonvpccdkantonpublicsubnetSubnet1DefaultRoute401103C6
      - antonvpccdkantonpublicsubnetSubnet1EIP4DF58982
      - antonvpccdkantonpublicsubnetSubnet1NATGatewayB5EF6795
      - antonvpccdkantonpublicsubnetSubnet1RouteTable38A7ABCF
      - antonvpccdkantonpublicsubnetSubnet1RouteTableAssociation2DF0498F
      - antonvpccdkantonpublicsubnetSubnet1SubnetD0D1B122
      - antonvpccdkantonpublicsubnetSubnet2DefaultRouteCD18C82E
      - antonvpccdkantonpublicsubnetSubnet2EIP9085C611
      - antonvpccdkantonpublicsubnetSubnet2NATGatewayC1A242E4
      - antonvpccdkantonpublicsubnetSubnet2RouteTable0905E0B9
      - antonvpccdkantonpublicsubnetSubnet2RouteTableAssociation694613B7
      - antonvpccdkantonpublicsubnetSubnet2SubnetEFDC3334
      - antonvpccdkantonpublicsubnetSubnet3DefaultRoute73CAE73F
      - antonvpccdkantonpublicsubnetSubnet3EIP86C7FE58
      - antonvpccdkantonpublicsubnetSubnet3NATGatewayAEB68587
      - antonvpccdkantonpublicsubnetSubnet3RouteTableEC4474BE
      - antonvpccdkantonpublicsubnetSubnet3RouteTableAssociationA091BC4A
      - antonvpccdkantonpublicsubnetSubnet3SubnetD08C7E9B
      - antonvpccdkIGWC4EBB54B
      - antonvpccdk3D35FF91
      - antonvpccdkRestrictDefaultSecurityGroupCustomResourceB3942FA5
      - antonvpccdkVPCGWAE1420F0
    Metadata:
      aws:cdk:path: EKSStack/antonekscluster-cdk/Resource/CreationRole/Resource
  antoneksclustercdkCreationRoleDefaultPolicy4A23F4D9:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: iam:PassRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - antonclusterrolecdkF4B68E20
                - Arn
          - Action:
              - eks:CreateCluster
              - eks:CreateFargateProfile
              - eks:DeleteCluster
              - eks:DescribeCluster
              - eks:DescribeUpdate
              - eks:TagResource
              - eks:UntagResource
              - eks:UpdateClusterConfig
              - eks:UpdateClusterVersion
            Effect: Allow
            Resource:
              - arn:aws:eks:us-west-2:406477933661:cluster/anton-eks-cluster-cdk
              - arn:aws:eks:us-west-2:406477933661:cluster/anton-eks-cluster-cdk/*
          - Action:
              - eks:DeleteFargateProfile
              - eks:DescribeFargateProfile
            Effect: Allow
            Resource: arn:aws:eks:us-west-2:406477933661:fargateprofile/anton-eks-cluster-cdk/*
          - Action:
              - ec2:DescribeDhcpOptions
              - ec2:DescribeInstances
              - ec2:DescribeNetworkInterfaces
              - ec2:DescribeRouteTables
              - ec2:DescribeSecurityGroups
              - ec2:DescribeSubnets
              - ec2:DescribeVpcs
              - iam:CreateServiceLinkedRole
              - iam:GetRole
              - iam:listAttachedRolePolicies
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: antoneksclustercdkCreationRoleDefaultPolicy4A23F4D9
      Roles:
        - Ref: antoneksclustercdkCreationRole46566DFE
    DependsOn:
      - antonvpccdkantonprivatesubnetSubnet1DefaultRoute8B6A80CB
      - antonvpccdkantonprivatesubnetSubnet1RouteTableCD9A5716
      - antonvpccdkantonprivatesubnetSubnet1RouteTableAssociationE5BE738A
      - antonvpccdkantonprivatesubnetSubnet1Subnet392C70FA
      - antonvpccdkantonprivatesubnetSubnet2DefaultRoute49F4F92C
      - antonvpccdkantonprivatesubnetSubnet2RouteTable928474E4
      - antonvpccdkantonprivatesubnetSubnet2RouteTableAssociation22D5EE8F
      - antonvpccdkantonprivatesubnetSubnet2Subnet760BD6B5
      - antonvpccdkantonprivatesubnetSubnet3DefaultRoute93043F18
      - antonvpccdkantonprivatesubnetSubnet3RouteTableA813D985
      - antonvpccdkantonprivatesubnetSubnet3RouteTableAssociationF0511171
      - antonvpccdkantonprivatesubnetSubnet3Subnet274C6A2D
      - antonvpccdkantonpublicsubnetSubnet1DefaultRoute401103C6
      - antonvpccdkantonpublicsubnetSubnet1EIP4DF58982
      - antonvpccdkantonpublicsubnetSubnet1NATGatewayB5EF6795
      - antonvpccdkantonpublicsubnetSubnet1RouteTable38A7ABCF
      - antonvpccdkantonpublicsubnetSubnet1RouteTableAssociation2DF0498F
      - antonvpccdkantonpublicsubnetSubnet1SubnetD0D1B122
      - antonvpccdkantonpublicsubnetSubnet2DefaultRouteCD18C82E
      - antonvpccdkantonpublicsubnetSubnet2EIP9085C611
      - antonvpccdkantonpublicsubnetSubnet2NATGatewayC1A242E4
      - antonvpccdkantonpublicsubnetSubnet2RouteTable0905E0B9
      - antonvpccdkantonpublicsubnetSubnet2RouteTableAssociation694613B7
      - antonvpccdkantonpublicsubnetSubnet2SubnetEFDC3334
      - antonvpccdkantonpublicsubnetSubnet3DefaultRoute73CAE73F
      - antonvpccdkantonpublicsubnetSubnet3EIP86C7FE58
      - antonvpccdkantonpublicsubnetSubnet3NATGatewayAEB68587
      - antonvpccdkantonpublicsubnetSubnet3RouteTableEC4474BE
      - antonvpccdkantonpublicsubnetSubnet3RouteTableAssociationA091BC4A
      - antonvpccdkantonpublicsubnetSubnet3SubnetD08C7E9B
      - antonvpccdkIGWC4EBB54B
      - antonvpccdk3D35FF91
      - antonvpccdkRestrictDefaultSecurityGroupCustomResourceB3942FA5
      - antonvpccdkVPCGWAE1420F0
    Metadata:
      aws:cdk:path: EKSStack/antonekscluster-cdk/Resource/CreationRole/DefaultPolicy/Resource
  antoneksclustercdk10D2EC7F:
    Type: Custom::AWSCDK-EKS-Cluster
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454
          - Outputs.EKSStackawscdkawseksClusterResourceProviderframeworkonEventFBCB1067Arn
      Config:
        name: anton-eks-cluster-cdk
        version: "1.30"
        roleArn:
          Fn::GetAtt:
            - antonclusterrolecdkF4B68E20
            - Arn
        kubernetesNetworkConfig:
          ipFamily: ipv4
        resourcesVpcConfig:
          subnetIds:
            - Ref: antonvpccdkantonprivatesubnetSubnet1Subnet392C70FA
            - Ref: antonvpccdkantonprivatesubnetSubnet2Subnet760BD6B5
            - Ref: antonvpccdkantonprivatesubnetSubnet3Subnet274C6A2D
          securityGroupIds:
            - Fn::GetAtt:
                - antonclusterSGcdk51242161
                - GroupId
          endpointPublicAccess: true
          endpointPrivateAccess: true
        accessConfig: {}
      AssumeRoleArn:
        Fn::GetAtt:
          - antoneksclustercdkCreationRole46566DFE
          - Arn
      AttributesRevision: 3
    DependsOn:
      - antoneksclustercdkCreationRoleDefaultPolicy4A23F4D9
      - antoneksclustercdkCreationRole46566DFE
      - antonvpccdkantonprivatesubnetSubnet1DefaultRoute8B6A80CB
      - antonvpccdkantonprivatesubnetSubnet1RouteTableCD9A5716
      - antonvpccdkantonprivatesubnetSubnet1RouteTableAssociationE5BE738A
      - antonvpccdkantonprivatesubnetSubnet1Subnet392C70FA
      - antonvpccdkantonprivatesubnetSubnet2DefaultRoute49F4F92C
      - antonvpccdkantonprivatesubnetSubnet2RouteTable928474E4
      - antonvpccdkantonprivatesubnetSubnet2RouteTableAssociation22D5EE8F
      - antonvpccdkantonprivatesubnetSubnet2Subnet760BD6B5
      - antonvpccdkantonprivatesubnetSubnet3DefaultRoute93043F18
      - antonvpccdkantonprivatesubnetSubnet3RouteTableA813D985
      - antonvpccdkantonprivatesubnetSubnet3RouteTableAssociationF0511171
      - antonvpccdkantonprivatesubnetSubnet3Subnet274C6A2D
      - antonvpccdkantonpublicsubnetSubnet1DefaultRoute401103C6
      - antonvpccdkantonpublicsubnetSubnet1EIP4DF58982
      - antonvpccdkantonpublicsubnetSubnet1NATGatewayB5EF6795
      - antonvpccdkantonpublicsubnetSubnet1RouteTable38A7ABCF
      - antonvpccdkantonpublicsubnetSubnet1RouteTableAssociation2DF0498F
      - antonvpccdkantonpublicsubnetSubnet1SubnetD0D1B122
      - antonvpccdkantonpublicsubnetSubnet2DefaultRouteCD18C82E
      - antonvpccdkantonpublicsubnetSubnet2EIP9085C611
      - antonvpccdkantonpublicsubnetSubnet2NATGatewayC1A242E4
      - antonvpccdkantonpublicsubnetSubnet2RouteTable0905E0B9
      - antonvpccdkantonpublicsubnetSubnet2RouteTableAssociation694613B7
      - antonvpccdkantonpublicsubnetSubnet2SubnetEFDC3334
      - antonvpccdkantonpublicsubnetSubnet3DefaultRoute73CAE73F
      - antonvpccdkantonpublicsubnetSubnet3EIP86C7FE58
      - antonvpccdkantonpublicsubnetSubnet3NATGatewayAEB68587
      - antonvpccdkantonpublicsubnetSubnet3RouteTableEC4474BE
      - antonvpccdkantonpublicsubnetSubnet3RouteTableAssociationA091BC4A
      - antonvpccdkantonpublicsubnetSubnet3SubnetD08C7E9B
      - antonvpccdkIGWC4EBB54B
      - antonvpccdk3D35FF91
      - antonvpccdkRestrictDefaultSecurityGroupCustomResourceB3942FA5
      - antonvpccdkVPCGWAE1420F0
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: EKSStack/antonekscluster-cdk/Resource/Resource/Default
  antoneksclustercdkKubectlReadyBarrier7910ABE7:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Value: aws:cdk:eks:kubectl-ready
    DependsOn:
      - antoneksclustercdkCreationRoleDefaultPolicy4A23F4D9
      - antoneksclustercdkCreationRole46566DFE
      - antoneksclustercdk10D2EC7F
    Metadata:
      aws:cdk:path: EKSStack/antonekscluster-cdk/KubectlReadyBarrier
  awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        Fn::Join:
          - ""
          - - https://s3.us-west-2.
            - Ref: AWS::URLSuffix
            - /cdk-hnb659fds-assets-406477933661-us-west-2/9a1e9e0a309d0b9007ccfcc8a0d1ae0efd81858b640cf5bf5c6a5af6bc41e476.json
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: EKSStack/@aws-cdk--aws-eks.ClusterResourceProvider.NestedStack/@aws-cdk--aws-eks.ClusterResourceProvider.NestedStackResource
      aws:asset:path: EKSStackawscdkawseksClusterResourceProviderFA7A3DEC.nested.template.json
      aws:asset:property: TemplateURL
  awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        referencetoEKSStackantoneksclustercdkKubectlHandlerRole906FDE6CArn:
          Fn::GetAtt:
            - antoneksclustercdkKubectlHandlerRoleEC0D22C5
            - Arn
        referencetoEKSStackantonvpccdkantonprivatesubnetSubnet1Subnet037F47BCRef:
          Ref: antonvpccdkantonprivatesubnetSubnet1Subnet392C70FA
        referencetoEKSStackantonvpccdkantonprivatesubnetSubnet2Subnet02ED1B12Ref:
          Ref: antonvpccdkantonprivatesubnetSubnet2Subnet760BD6B5
        referencetoEKSStackantonvpccdkantonprivatesubnetSubnet3Subnet52E89BBBRef:
          Ref: antonvpccdkantonprivatesubnetSubnet3Subnet274C6A2D
        referencetoEKSStackantoneksclustercdkA0B24CDCClusterSecurityGroupId:
          Fn::GetAtt:
            - antoneksclustercdk10D2EC7F
            - ClusterSecurityGroupId
      TemplateURL:
        Fn::Join:
          - ""
          - - https://s3.us-west-2.
            - Ref: AWS::URLSuffix
            - /cdk-hnb659fds-assets-406477933661-us-west-2/8adfff45d0101cf1570a7e7425aa8b3a61988739884487f1ef90c159520d07cd.json
    DependsOn:
      - antoneksclustercdkKubectlHandlerRoleDefaultPolicy066BFB72
      - antoneksclustercdkKubectlHandlerRoleEC0D22C5
      - antonvpccdkantonprivatesubnetSubnet1DefaultRoute8B6A80CB
      - antonvpccdkantonprivatesubnetSubnet1RouteTableAssociationE5BE738A
      - antonvpccdkantonprivatesubnetSubnet2DefaultRoute49F4F92C
      - antonvpccdkantonprivatesubnetSubnet2RouteTableAssociation22D5EE8F
      - antonvpccdkantonprivatesubnetSubnet3DefaultRoute93043F18
      - antonvpccdkantonprivatesubnetSubnet3RouteTableAssociationF0511171
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: EKSStack/@aws-cdk--aws-eks.KubectlProvider.NestedStack/@aws-cdk--aws-eks.KubectlProvider.NestedStackResource
      aws:asset:path: EKSStackawscdkawseksKubectlProvider8FFFC4C0.nested.template.json
      aws:asset:property: TemplateURL
  antonnodegrouprolecdk47CDD18D:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonEKSWorkerNodePolicy
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonEC2FullAccess
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonEKS_CNI_Policy
    Metadata:
      aws:cdk:path: EKSStack/antonnodegrouprole-cdk/Resource
  antonnodegroupcdk:
    Type: AWS::EKS::Nodegroup
    Properties:
      AmiType: AL2_x86_64
      ClusterName:
        Ref: antoneksclustercdk10D2EC7F
      DiskSize: 20
      InstanceTypes:
        - t3.medium
      NodeRole:
        Fn::GetAtt:
          - antonnodegrouprolecdk47CDD18D
          - Arn
      NodegroupName: anton-node-group-cdk
      RemoteAccess:
        Ec2SshKey: anton
      ScalingConfig:
        DesiredSize: 2
        MaxSize: 10
        MinSize: 1
      Subnets:
        - Ref: antonvpccdkantonprivatesubnetSubnet1Subnet392C70FA
        - Ref: antonvpccdkantonprivatesubnetSubnet2Subnet760BD6B5
        - Ref: antonvpccdkantonprivatesubnetSubnet3Subnet274C6A2D
    Metadata:
      aws:cdk:path: EKSStack/antonnodegroup-cdk
  VPCCNIAddon:
    Type: AWS::EKS::Addon
    Properties:
      AddonName: vpc-cni
      ClusterName:
        Ref: antoneksclustercdk10D2EC7F
      ResolveConflicts: OVERWRITE
    Metadata:
      aws:cdk:path: EKSStack/VPCCNIAddon
  CoreDNSAddon:
    Type: AWS::EKS::Addon
    Properties:
      AddonName: coredns
      ClusterName:
        Ref: antoneksclustercdk10D2EC7F
      ResolveConflicts: OVERWRITE
    Metadata:
      aws:cdk:path: EKSStack/CoreDNSAddon
  KubeProxyAddon:
    Type: AWS::EKS::Addon
    Properties:
      AddonName: kube-proxy
      ClusterName:
        Ref: antoneksclustercdk10D2EC7F
      ResolveConflicts: OVERWRITE
    Metadata:
      aws:cdk:path: EKSStack/KubeProxyAddon
  PodIdentityAddon:
    Type: AWS::EKS::Addon
    Properties:
      AddonName: eks-pod-identity-agent
      ClusterName:
        Ref: antoneksclustercdk10D2EC7F
      ResolveConflicts: OVERWRITE
    Metadata:
      aws:cdk:path: EKSStack/PodIdentityAddon
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/21QQU7DMBB8S++u20aAuIYIVb1AlKBekWNvw9LEW9nrlirK33ESSjhw2tnxeDyeRG7uH+V6oS5+qc1x2WAlu5KVPopIvXegE9ntT1pkB7vPM5GHqkFdhsoCD9yMCgoMb6pqYOZnLvWeNCpGsr/iATzv8mG8KN4qhou6itzhOcLZeGcZXMQ3wZTkZ0s5Zv1owbIoQQeHfN06Cqcxw1+iF6ha2RU05RtnTvEvo+GEegFHL7usCT4+OeYiA/XNLzWGbN+LAjwFp6NP1FE7r9H2/6Pc0RkNuCflQcQqgGPFNdp6uJORNXgrZqo+gtfAp8C9qGkjk0SuVw3a8LVSrXm4W3x6xKULlrEFWUzzG2JNhpvKAQAA
    Metadata:
      aws:cdk:path: EKSStack/CDKMetadata/Default
Conditions:
  antoneksclustercdkHasEcrPublic6D167177:
    Fn::Equals:
      - Ref: AWS::Partition
      - aws
Outputs:
  EKSClusterName:
    Value:
      Ref: antoneksclustercdk10D2EC7F
  VPCId:
    Value:
      Ref: antonvpccdk3D35FF91
  ClusterSecurityGroupId:
    Value:
      Fn::GetAtt:
        - antonclusterSGcdk51242161
        - GroupId
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
