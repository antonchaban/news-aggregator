name: release-please

on:
  push:
    branches:
      - master

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.set_output.outputs.version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Release Please
        id: release
        uses: google-github-actions/release-please-action@v4

      - name: Set output version
        id: set_output
        run: echo "version=${{ steps.release.outputs.version }}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        if: ${{ steps.release.outputs.release_created }}
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        if: ${{ steps.release.outputs.release_created }}
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        if: ${{ steps.release.outputs.release_created }}
        uses: docker/build-push-action@v5
        with:
          context: .
          file: .Dockerfile
          push: true
          tags: |
            antohachaban/news-alligator-web:${{ steps.release.outputs.version }}
            antohachaban/news-alligator-web:latest

  # Job 2: Tag the image from Docker Hub and push to Amazon ECR
  push-to-ecr:
    needs: release-please
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Pull Docker image from Docker Hub
        run: |
          docker pull antohachaban/news-alligator-web:${{ needs.release-please.outputs.version }}
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Tag Docker image for ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: antohachaban/news-alligator-web
          IMAGE_TAG: antohachaban/news-alligator-web
        run: |
          docker tag $IMAGE_TAG:${{ needs.release-please.outputs.version }} $ECR_REGISTRY/$ECR_REPOSITORY:${{ needs.release-please.outputs.version }}
          docker tag $IMAGE_TAG:latest $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:${{ needs.release-please.outputs.version }}
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest