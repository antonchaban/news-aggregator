# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - master
      - feature/**

jobs:

  all-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Install task
        uses: arduino/setup-task@v2

      - name: Run all checks
        run: task all-checks

      - name: Check for changes
        run: |
          git diff --exit-code || (echo "There are changes after running all checks." && exit 1)

      - name: Run manifests task in operator directory
        run: task manifests
        working-directory: ./operator

      - name: Check for changes in operator directory
        run: |
          git diff --exit-code || (echo "There are changes in the operator directory after running manifests." && exit 1)
        working-directory: ./operator

  lint:
    runs-on: ubuntu-latest
    needs: all-checks
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
            go-version: '1.22'
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
            version: v1.59


  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Install task
        uses: arduino/setup-task@v2

      - name: Build
        run: task build-go

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Install task
        uses: arduino/setup-task@v2

      - name: Test
        run: task test


  finish:
    runs-on: ubuntu-latest
    needs:
      - build
      - test
    if: needs.build.result == 'success' && needs.test.result == 'success'
    steps:
      - run: echo "Build and test are successful"
