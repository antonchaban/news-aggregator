version: '3'

env:
  DOCKER_IMAGE_NAME: antohachaban/news-alligator-web

tasks:
  build:
    cmds:
      - docker build . -f ./.Dockerfile -t {{.DOCKER_IMAGE_NAME}}:{{.VERSION}}
    vars:
        VERSION: '{{.VERSION | default "latest"}}'
    desc: "Build the Docker image, example: task build VERSION=0.1.2"

  run:
    cmds:
      - docker run -d -v news-aggregator-backups:/root/backups -p {{.PORT}}:8080 {{.DOCKER_IMAGE_NAME}}
    vars:
      PORT: '{{default "8080" .PORT}}'
    desc: "Run the Docker container, example: task build PORT=8080"

  stop:
    cmds:
      - docker stop $(docker ps -q --filter ancestor={{.DOCKER_IMAGE_NAME}})
    desc: Stop the Docker container

  push:
    cmds:
      - docker push {{.DOCKER_IMAGE_NAME}}
    desc: Push the Docker image to the registry

  test:
    cmds:
      - go test -v ./...
    desc: Run tests

  pull:
    cmds:
      - docker pull {{.DOCKER_IMAGE_NAME}}
    desc: Pull the Docker image from the registry

  swag:
    cmds:
      - swag init -d cmd/news-alligator/web,pkg/handler/web,pkg/model
    desc: Initialize Swagger documentation

  run-local:
    env:
      PORT: 8080
      SAVES_DIR: ./backups
      CERT_FILE: ./server.crt
      KEY_FILE: ./server.key
    cmds:
      - go build -o web.exe ./cmd/news-alligator/web
      - ./web.exe
    desc: Build and run the main Go file locally with environment variables


  mockgen:
    desc: Run mockgen for generating mocks
    cmds:
      - mockgen -destination=pkg/service/mocks/mock_source_service.go -package=mocks github.com/antonchaban/news-aggregator/pkg/service SourceService
      - mockgen -destination=pkg/storage/mocks/mock_article.go -package=mocks github.com/antonchaban/news-aggregator/pkg/storage ArticleStorage
      - mockgen -destination=pkg/service/mocks/mock_article_service.go -package=mocks github.com/antonchaban/news-aggregator/pkg/service ArticleService
      - mockgen -destination=pkg/storage/mocks/mock_source.go -package=mocks github.com/antonchaban/news-aggregator/pkg/storage SourceStorage