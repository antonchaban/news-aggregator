version: '3'

tasks:
  build-docker:
    cmds:
      - docker build . -f Dockerfile -t antohachaban/news-alligator-web
    desc: Build the Docker image

  run-docker:
    cmds:
      - docker run -d -v news-aggregator-backups:/root/backups -p 8080:8080 antohachaban/news-alligator-web
    desc: Run the Docker container

  stop-docker:
    cmds:
      - docker stop $(docker ps -q --filter ancestor=antohachaban/news-alligator-web)
    desc: Stop the Docker container

  push-docker:
    cmds:
      - docker push antohachaban/news-alligator-web
    desc: Push the Docker image to the registry

  test:
    cmds:
      - go test -v ./...
    desc: Run tests

  pull-docker:
    cmds:
      - docker pull antohachaban/news-alligator-web
    desc: Pull the Docker image from the registry

  swag:
    cmds:
      - swag init -d .,../../../pkg/handler/web,../../../pkg/model
    desc: Initialize Swagger documentation

  run-local:
    env:
      PORT: 8080
      SAVES_DIR: ./backups
      CERT_FILE: ./server.crt
      KEY_FILE: ./server.key
    cmds:
      - go build -o web.exe ./cmd/news-alligator/web
      - ./web.exe
    desc: Build and run the main Go file locally with environment variables

  mockgen:
    desc: Run mockgen for generating mocks
    cmds:
      - mockgen -destination=pkg/service/mocks/mock_source_service.go -package=mocks github.com/antonchaban/news-aggregator/pkg/service SourceService
      - mockgen -destination=pkg/storage/mocks/mock_article.go -package=mocks github.com/antonchaban/news-aggregator/pkg/storage ArticleStorage
      - mockgen -destination=pkg/service/mocks/mock_article_service.go -package=mocks github.com/antonchaban/news-aggregator/pkg/service ArticleService
      - mockgen -destination=pkg/storage/mocks/mock_source.go -package=mocks github.com/antonchaban/news-aggregator/pkg/storage SourceStorage

  install-postgres:
    cmds:
      - docker pull postgres
    desc: Pull the PostgreSQL Docker image

  run-postgres:
    deps: [install-postgres]
    env:
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    cmds:
      - docker run --name=news-alligator-db -e POSTGRES_PASSWORD=$POSTGRES_PASSWORD -p 5436:5432 -d --rm postgres
    desc: Run the PostgreSQL container

  init-db:
    cmds:
      - migrate -path ./schema -database 'postgres://postgres:qwerty@0.0.0.0:5436/postgres?sslmode=disable' up
    desc: Initialize the database

  format:
    cmds:
      - go fmt ./...
    desc: Format the code

  vet:
    cmds:
      - go vet ./...
    desc: Run go vet to check for issues

  install-golangci-lint:
    cmds:
      - curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.51.2
    desc: Install golangci-lint

  lint:
    deps: [install-golangci-lint]
    cmds:
      - golangci-lint run
    desc: Run linter to check for linting issues

  tidy:
    cmds:
      - go mod tidy
    desc: Run go mod tidy to clean up dependencies

  build-go:
    cmds:
      - go build -o web.exe ./cmd/news-alligator/web
    desc: Build the Go source code
